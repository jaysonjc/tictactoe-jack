function TicTacToeGame.init 0
call InputUtil.init 0
pop temp 0
push constant 200
push constant 60
call Board.new 2
pop static 0
push constant 1
call Piece.new 1
pop static 1
push constant 2
call Piece.new 1
pop static 2
call TicTacToeGame.initGame 0
pop temp 0
push constant 0
return
function TicTacToeGame.initGame 0
push constant 0
return
function TicTacToeGame.processBoard 0
push static 0
call Board.evaluateBoard 1
pop temp 0
push static 0
call Board.isWin 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 0
call Board.drawWin 1
pop temp 0
label IF_FALSE0
push constant 0
return
function TicTacToeGame.startGame 3
push constant 25
call String.new 1
push constant 80
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 46
call String.appendChar 2
push constant 46
call String.appendChar 2
push constant 46
call String.appendChar 2
call InputUtil.showMessage 1
pop temp 0
call TicTacToeGame.seedGame 0
pop temp 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push constant 33
call String.new 1
push constant 69
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 40
call String.appendChar 2
push constant 49
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 57
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 48
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 113
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 41
call String.appendChar 2
push constant 58
call String.appendChar 2
call InputUtil.readInput 1
pop local 0
push local 0
call TicTacToeGame.inputToMove 1
pop local 1
push static 0
push constant 0
push local 1
add
pop pointer 1
push that 0
push constant 1
push local 1
add
pop pointer 1
push that 0
push static 1
call Board.makeMove 4
pop temp 0
push local 1
call Array.dispose 1
pop temp 0
call TicTacToeGame.processBoard 0
pop temp 0
call TicTacToeGame.getComputerMove 0
pop local 2
push static 0
push constant 1
push local 2
add
pop pointer 1
push that 0
push constant 2
push local 2
add
pop pointer 1
push that 0
push static 2
call Board.makeMove 4
pop temp 0
push local 2
call Array.dispose 1
pop temp 0
call TicTacToeGame.processBoard 0
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function TicTacToeGame.getComputerMove 0
push static 2
call TicTacToeGame.getTheBestMove 1
return
function TicTacToeGame.findWinOrDraw 5
push constant 0
pop local 4
push constant 0
pop local 2
push constant 0
pop local 0
push static 0
call Board.getFreeCellCount 1
pop local 1
push static 0
call Board.getAvailableMoves 1
pop local 3
label WHILE_EXP0
push local 2
push local 1
lt
push local 0
not
and
not
if-goto WHILE_END0
push static 0
push constant 2
push local 2
call Math.multiply 2
push local 3
add
pop pointer 1
push that 0
push constant 2
push local 2
call Math.multiply 2
push constant 1
add
push local 3
add
pop pointer 1
push that 0
push argument 0
call Board.makeMove 4
pop temp 0
push static 0
call Board.evaluateBoard 1
pop temp 0
push static 0
call Board.isDraw 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 3
call Array.new 1
pop local 4
push constant 0
push local 4
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 4
add
push constant 2
push local 2
call Math.multiply 2
push local 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 4
add
push constant 2
push local 2
call Math.multiply 2
push constant 1
add
push local 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 0
label IF_FALSE0
push static 0
call Board.isWin 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 3
call Array.new 1
pop local 4
push constant 0
push local 4
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 4
add
push constant 2
push local 2
call Math.multiply 2
push local 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 4
add
push constant 2
push local 2
call Math.multiply 2
push constant 1
add
push local 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 0
label IF_FALSE1
push static 0
push constant 2
push local 2
call Math.multiply 2
push local 3
add
pop pointer 1
push that 0
push constant 2
push local 2
call Math.multiply 2
push constant 1
add
push local 3
add
pop pointer 1
push that 0
push argument 0
call Board.takeBackMove 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 3
call Array.dispose 1
pop temp 0
push local 4
return
function TicTacToeGame.getTheBestMove 8
push argument 0
call TicTacToeGame.findWinOrDraw 1
pop local 0
push constant 3
pop local 5
push local 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
return
goto IF_END0
label IF_FALSE0
push static 0
call Board.getFreeCellCount 1
pop local 4
push static 0
call Board.getAvailableMoves 1
pop local 1
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push local 4
lt
not
if-goto WHILE_END0
push static 0
push constant 2
push local 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
push constant 2
push local 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
push argument 0
call Board.makeMove 4
pop temp 0
push argument 0
call TicTacToeGame.getOtherPiece 1
call TicTacToeGame.getTheBestMove 1
pop local 2
push constant 0
push local 2
add
pop pointer 1
push that 0
push local 5
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push local 2
add
pop pointer 1
push that 0
pop local 5
push constant 2
push local 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
pop local 6
push constant 2
push local 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 7
label IF_FALSE1
push local 2
call Array.dispose 1
pop temp 0
push static 0
push constant 2
push local 3
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
push constant 2
push local 3
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
push argument 0
call Board.takeBackMove 4
pop temp 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 1
call Array.dispose 1
pop temp 0
push constant 3
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push local 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push local 0
return
function TicTacToeGame.getOtherPiece 0
push argument 0
push static 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 2
return
goto IF_END0
label IF_FALSE0
push static 1
return
label IF_END0
function TicTacToeGame.prepareMoveResult 1
push constant 3
call Array.new 1
pop local 0
push constant 1
push local 0
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
function TicTacToeGame.getTheBestMove2 9
push static 0
call Board.getFreeCellCount 1
pop local 0
push static 0
call Board.getAvailableMoves 1
pop local 5
push constant 0
pop local 4
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push local 0
lt
not
if-goto WHILE_END0
call Keyboard.readChar 0
pop temp 0
push static 0
push constant 2
push local 1
call Math.multiply 2
push local 5
add
pop pointer 1
push that 0
push constant 2
push local 1
call Math.multiply 2
push constant 1
add
push local 5
add
pop pointer 1
push that 0
push argument 0
call Board.makeMove 4
pop temp 0
push static 0
call Board.evaluateBoard 1
pop temp 0
push static 0
call Board.isDraw 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
push local 1
call Math.multiply 2
push local 5
add
pop pointer 1
push that 0
push constant 2
push local 1
call Math.multiply 2
push constant 1
add
push local 5
add
pop pointer 1
push that 0
push constant 2
call TicTacToeGame.prepareMoveResult 3
return
label IF_FALSE0
push static 0
call Board.isWin 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
push local 1
call Math.multiply 2
push local 5
add
pop pointer 1
push that 0
push constant 2
push local 1
call Math.multiply 2
push constant 1
add
push local 5
add
pop pointer 1
push that 0
push constant 3
call TicTacToeGame.prepareMoveResult 3
return
goto IF_END1
label IF_FALSE1
push argument 0
call TicTacToeGame.getOtherPiece 1
call TicTacToeGame.getTheBestMove 1
pop local 6
call Keyboard.readChar 0
pop temp 0
push constant 0
push local 6
add
pop pointer 1
push that 0
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
goto IF_END2
label IF_FALSE2
push constant 2
push local 1
call Math.multiply 2
push local 5
add
pop pointer 1
push that 0
pop local 2
push constant 2
push local 1
call Math.multiply 2
push constant 1
add
push local 5
add
pop pointer 1
push that 0
pop local 3
label IF_END2
label IF_END1
call Keyboard.readChar 0
pop temp 0
push static 0
push constant 2
push local 1
call Math.multiply 2
push local 5
add
pop pointer 1
push that 0
push constant 2
push local 1
call Math.multiply 2
push constant 1
add
push local 5
add
pop pointer 1
push that 0
push argument 0
call Board.takeBackMove 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 2
push local 3
push constant 1
call TicTacToeGame.prepareMoveResult 3
return
function TicTacToeGame.makeComputerMove 9
push constant 0
pop local 4
push constant 0
pop local 8
push constant 3
call Array.new 1
pop local 2
push static 0
call Board.getFreeCellCount 1
pop local 6
push static 0
call Board.getAvailableMoves 1
pop local 0
push constant 0
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 2
add
push constant 0
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 2
add
push constant 1
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 3
push constant 1
add
pop static 3
label WHILE_EXP0
push local 4
push local 6
lt
not
if-goto WHILE_END0
push static 0
push constant 2
push local 4
call Math.multiply 2
push local 0
add
pop pointer 1
push that 0
push constant 2
push local 4
call Math.multiply 2
push constant 1
add
push local 0
add
pop pointer 1
push that 0
push static 2
call Board.makeMove 4
pop temp 0
push static 0
call Board.evaluateBoard 1
pop temp 0
push static 0
call Board.isDraw 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 2
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 2
add
push constant 2
push local 4
call Math.multiply 2
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 2
add
push constant 2
push local 4
call Math.multiply 2
push constant 1
add
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
return
label IF_FALSE0
push static 0
call Board.isWin 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 8
push constant 1
add
pop local 8
push constant 0
push local 2
add
push constant 2
push local 8
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 2
add
push constant 2
push local 4
call Math.multiply 2
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 2
add
push constant 2
push local 4
call Math.multiply 2
push constant 1
add
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push constant 0
pop local 5
push static 0
call Board.getFreeCellCount 1
pop local 7
push static 0
call Board.getAvailableMoves 1
pop local 1
label WHILE_EXP1
push local 5
push local 7
lt
not
if-goto WHILE_END1
push static 0
push constant 2
push local 5
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
push constant 2
push local 5
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
push static 1
call Board.makeMove 4
pop temp 0
push static 0
call Board.evaluateBoard 1
pop temp 0
push static 0
call Board.isWin 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
label IF_FALSE2
push static 0
call Board.isDraw 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
goto IF_END3
label IF_FALSE3
call TicTacToeGame.makeComputerMove 0
pop local 3
push local 3
call Array.dispose 1
pop temp 0
label IF_END3
push static 0
push constant 2
push local 5
call Math.multiply 2
push local 1
add
pop pointer 1
push that 0
push constant 2
push local 5
call Math.multiply 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
push static 1
call Board.takeBackMove 4
pop temp 0
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP1
label WHILE_END1
push local 1
call Array.dispose 1
pop temp 0
label IF_END1
push static 0
push constant 2
push local 4
call Math.multiply 2
push local 0
add
pop pointer 1
push that 0
push constant 2
push local 4
call Math.multiply 2
push constant 1
add
push local 0
add
pop pointer 1
push that 0
push static 2
call Board.takeBackMove 4
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 0
call Array.dispose 1
pop temp 0
push local 2
return
function TicTacToeGame.randomMove 2
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push constant 8
call Random.randRange 1
push constant 1
add
pop local 0
push local 0
call TicTacToeGame.inputToMove 1
pop local 1
push static 0
push constant 0
push local 1
add
pop pointer 1
push that 0
push constant 1
push local 1
add
pop pointer 1
push that 0
call Board.isFree 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
return
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function TicTacToeGame.inputToMove 1
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push argument 0
push constant 1
sub
push constant 3
call Math.divide 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push argument 0
push constant 1
sub
push constant 3
push constant 0
push local 0
add
pop pointer 1
push that 0
call Math.multiply 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
function TicTacToeGame.seedGame 2
push constant 0
pop local 1
push constant 1
pop local 0
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
call Keyboard.keyPressed 0
push constant 128
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
push local 0
push constant 25444
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop local 0
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push local 0
call Random.setSeed 1
pop temp 0
push constant 0
return
